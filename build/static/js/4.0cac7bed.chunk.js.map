{"version":3,"sources":["services/signup.js","components/Signup/Signup.js"],"names":["newUser","axios","post","then","response","data","Signup","useState","username","setUsername","password","setPassword","confpassword","setConfpassword","passwordmatch","bio","setBio","className","onSubmit","e","console","log","preventDefault","userObject","trim","helper","showtoast","signupService","returnedUser","catch","err","htmlFor","type","name","id","value","onChange","target","required"],"mappings":"iMAOe,EALA,SAAAA,GAEb,OADgBC,IAAMC,KAAK,aAAcF,GAC1BG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OC+H5BC,UA9HA,WAAO,IAAD,EAEeC,mBAAS,IAFxB,mBAEXC,EAFW,KAEDC,EAFC,OAIeF,mBAAS,IAJxB,mBAIXG,EAJW,KAIDC,EAJC,OAMuBJ,mBAAS,IANhC,mBAMXK,EANW,KAMGC,EANH,KAQfC,GAAgB,EARD,EAUKP,mBAAS,IAVd,mBAUXQ,EAVW,KAUNC,EAVM,KAmEnB,OACE,yBAAKC,UAAU,UACf,yBAAKA,UAAU,kBACf,0BAAMC,SAtCa,SAACC,GACnBC,QAAQC,IAAI,wBACZF,EAAEG,iBACF,IAAMC,EAAa,CACjBf,SAAUA,EAASgB,OACnBd,SAAUA,EAASc,OACnBT,IAAKA,GAGHH,IAAiBF,GAClBI,GAAc,EACdW,IAAOC,UAAU,4BAEjBZ,GAAc,EAGdA,GACDa,EACYJ,GACPpB,MAAK,SAAAyB,GACDnB,EAAY,IACbE,EAAY,IACZE,EAAgB,IAChBG,EAAO,IACHY,GAGDR,QAAQC,IAAI,qBACZI,IAAOC,UAAU,wBAHhBD,IAAOC,UAAU,mEAMvBG,OAAM,SAAAC,GAAG,OAAIV,QAAQC,IAAIS,QAQ7B,2BACEC,QAAQ,YACRd,UAAU,UAFZ,YAGA,2BACGe,KAAK,OACLC,KAAK,WACLC,GAAG,YACHC,MAAO3B,EACP4B,SAnEmB,SAACjB,GAC5BC,QAAQC,IAAIb,GACZC,EAAYU,EAAEkB,OAAOF,QAkEdG,UAAQ,IAEV,2BACEP,QAAQ,YACRd,UAAU,UAFZ,YAGA,2BACGe,KAAK,WACLC,KAAK,WACLC,GAAG,YACHC,MAAOzB,EACP0B,SAzEmB,SAACjB,GAC5BC,QAAQC,IAAIX,GACZC,EAAYQ,EAAEkB,OAAOF,QAwEfG,UAAQ,IAET,2BACEP,QAAQ,gBACRd,UAAU,UAFZ,oBAGA,2BACGe,KAAK,WACLC,KAAK,eACLC,GAAG,gBACHC,MAAOvB,EACPwB,SA/EuB,SAACjB,GAChCC,QAAQC,IAAIT,GACZC,EAAgBM,EAAEkB,OAAOF,QA8ElBG,UAAQ,IAEjB,2BACGP,QAAQ,OACRd,UAAU,UAFb,OAGA,8BACGe,KAAK,OACLC,KAAK,MACLC,GAAG,OACHC,MAAOpB,EACPqB,SArFqB,SAACjB,GACvBC,QAAQC,IAAIN,GACZC,EAAOG,EAAEkB,OAAOF,UAqFjB,2BACGH,KAAK,SACLE,GAAG,UACHC,MAAM,SACNF,KAAK","file":"static/js/4.0cac7bed.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst signup = newUser => {\n  const request = axios.post('/api/user/', newUser)\n  return request.then(response => response.data)\n}\n\nexport default { signup }\n","import React, { useState } from 'react'\nimport './Signup.css'\nimport signupService from '../../services/signup.js' \nimport helper from './../utils/helper.js'\n\nconst Signup = () => {\n  \n  const [ username, setUsername ] = useState('')\n\n  const [ password, setPassword ] = useState('')\n\n  const [ confpassword, setConfpassword ] = useState('')\n\n  let passwordmatch = false\n\n  const [ bio, setBio ] = useState('')\n\n  const handleUsernameChange = (e) => {\n    console.log(username)\n    setUsername(e.target.value)\n  }\t\n\n  const handlePasswordChange = (e) => {\n    console.log(password)\n    setPassword(e.target.value)\n  }\n\n  const handleConfpasswordChange = (e) => {\n    console.log(confpassword)\n    setConfpassword(e.target.value)\n  }\n\n  const handleBioChange = (e) => {\n    console.log(bio)\n    setBio(e.target.value)\n  }\n\n  const handleSignup = (e) => {\n     console.log('inside handle signup')\n     e.preventDefault()\n     const userObject = {\n       username: username.trim(),\n       password: password.trim(),\n       bio: bio\n     }\n\n     if (confpassword !== password) {\n        passwordmatch=false\n        helper.showtoast(\"Passwords don't match!!\")\n     } else {\n        passwordmatch=true\n     }\n\n     if(passwordmatch){\n       signupService\n\t          .signup(userObject)\n\t          .then(returnedUser => { \n                setUsername('')\n\t              setPassword('')\n\t              setConfpassword('')\n\t              setBio('')\t\t \n\t              if(!returnedUser) {\n\t                  helper.showtoast(\"A user with that username already exists. Please try again!!\")\n\t              } else {\n\t                 console.log(\"signup successful\")\n\t                 helper.showtoast(\"Signup Successful!!\")\n\t              }\n\t          })\n            .catch(err => console.log(err))\n     }\n  }\n\n  return (\n    <div className=\"signup\">\n    <div className=\"sformcontainer\">\n    <form onSubmit={handleSignup}>\n         <label \n\t          htmlFor=\"susername\" \n\t          className=\"slabel\">Username</label>\n         <input\n            type=\"text\"\n            name=\"username\"\n            id=\"susername\"\n            value={username}\n            onChange={handleUsernameChange}\n\t          required\n         />\n         <label \n\t          htmlFor=\"spassword\" \n\t          className=\"slabel\">Password</label>\n         <input\n            type=\"password\"\n            name=\"password\"\n            id=\"spassword\"\n            value={password}\n            onChange={handlePasswordChange}\n\t         required\n         />\n         <label \n\t          htmlFor=\"sconfpassword\" \n\t          className=\"slabel\">Confirm Password</label>\n         <input\n            type=\"password\"\n            name=\"confpassword\"\n            id=\"sconfpassword\"\n            value={confpassword}\n            onChange={handleConfpasswordChange}\n\t          required\n         />\n\t <label \n\t    htmlFor=\"sbio\"\n\t    className=\"slabel\">Bio</label>\n\t <textarea\n\t    type=\"text\"\n\t    name=\"bio\"\n\t    id=\"sbio\"\n\t    value={bio}\n\t    onChange={handleBioChange}\n\t />\n   <input\n      type=\"submit\"\n      id=\"ssignup\"\n      value=\"Signup\"\n      name=\"submit\"\n    />\n   </form>\n   </div>\n  </div>\n )\n}\n\nexport default Signup\n"],"sourceRoot":""}